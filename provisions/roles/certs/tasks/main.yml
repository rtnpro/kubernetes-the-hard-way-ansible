---
- name: Ensure 'certs' dir exists
  file: dest={{ ansible_env.HOME }}/certs state=directory

- name: Get cfssl
  get_url: url=https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 dest=/usr/bin/cfssl mode=0755
  sudo: yes

- name: Get cfssljson
  get_url: url=https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 dest=/usr/bin/cfssljson mode=0755
  sudo: yes

- name: Create a CA config file
  copy: src=ca-config.json dest="{{ ansible_env.HOME }}/certs"

- name: Create a CA certificate signing request
  copy: src=ca-csr.json dest="{{ ansible_env.HOME }}/certs"

- name: Generate a CA certificate and key
  shell: cfssl gencert -initca ca-csr.json | cfssljson -bare ca
  args:
    chdir: "{{ ansible_env.HOME }}/certs"
  run_once: yes

- name: Create an admin certificate signing request
  copy: src=admin-csr.json dest="{{ ansible_env.HOME }}/certs"

- name: Create the admin client certificate
  shell: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin
  args:
    chdir: "{{ ansible_env.HOME }}/certs"
  run_once: yes

- name: Create an kube-proxy certificate signing request
  copy: src=kube-proxy-csr.json dest="{{ ansible_env.HOME }}/certs"

- name: Generate a kube-proxy certificate and key
  shell: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy
  args:
    chdir: "{{ ansible_env.HOME }}/certs"
  run_once: yes

- name: Create an kubernetes certificate signing request
  template: src=kubernetes-csr.json.j2 dest="{{ ansible_env.HOME }}/certs/kubernetes-csr.json"

- name: Generate a kubernetes certificate and key
  shell: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kubernetes-csr.json | cfssljson -bare kubernetes
  args:
    chdir: "{{ ansible_env.HOME }}/certs"
  run_once: yes
